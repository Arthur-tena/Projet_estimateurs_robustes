knitr::opts_chunk$set(echo = TRUE)
set.seed(1234)
median_of_means <- function(seq, n) {
if (n > length(seq)) {
n <- ceiling(length(seq) / 2)
}
indic <- rep(1:n, each = floor(length(seq) / n))
indic <- sample(indic)
moyennes <- sapply(1:n, function(block) mean(seq[indic == block]))
return(median(moyennes))
}
rob_median_of_means <- function(seq, n, l) {
res <- replicate(l, median_of_means(seq, n))
return(mean(res))
}
M=0
population1=rnorm(1000,M,3)
c(median_of_means(population1, 10),mean(population1),(mean(population1) - median_of_means(population1, 10)) ^ 2)
population2=rnorm(1000,4,1)
c(median_of_means(population2, 10),mean(population2),(mean(population2) - median_of_means(population2, 10)) ^ 2)
c(rob_median_of_means(population1, 10, 20),mean(population1),(mean(population1) - rob_median_of_means(population1, 10, 20)) ^ 2)
c(rob_median_of_means(population2, 10, 20),mean(population2),(mean(population2) - rob_median_of_means(population2, 10, 20)) ^ 2)
c(rob_median_of_means(population3, 10, 20),mean(population3),(mean(population3) - rob_median_of_means(population3, 10, 20)) ^ 2)
population3=rt(1000, df=5)
c(median_of_means(population3, 10),mean(population3),(mean(population3) - median_of_means(population3, 10)) ^ 2)
c(rob_median_of_means(population3, 10, 20),mean(population3),(mean(population3) - rob_median_of_means(population3, 10, 20)) ^ 2)
median_of_means_opt <- function(seq, alpha) {
n=length(seq)
k <- abs(trunc(8*log(1/alpha)))
m <- n/k
indic <- rep(1:k, each = m)
moyennes <- sapply(1:k, function(block) mean(seq[indic == block]))
return(median(moyennes))
}
rob_median_of_means_opt <- function(seq, alpha, l) {
res <- replicate(l, median_of_means_opt(seq, alpha))
return(mean(res))
}
median_of_means_opt <- function(alpha) {
population1=rnorm(1000,0,3)
n=length(population1)
vec=c()
for (i in 1:10){
k <- abs(trunc(i*log(1/alpha)))
m <- n/k
indic <- rep(1:k, each = m)
moyennes <- sapply(1:k, function(block) mean(population1[indic == block]))
vec[i]=median(moyennes)
}
return(vec)
}
median_of_means_opt(0.025)
median_of_means_opt <- function(seq, alpha, i) {
n <- length(seq)
k <- abs(trunc(i * log(1/alpha)))
m <- n / k
indic <- rep(1:k, each = m)
moyennes <- sapply(1:k, function(block) mean(seq[indic == block]))
return(median(moyennes))
}
population1 <- rnorm(1000, 0, 1)
alpha <- 0.025
i_values <- 1:10
median_values <- sapply(i_values, function(i) median_of_means_opt(population1, alpha, i))
plot(x = i_values, y = median_values, type = "l", xlab = "i", ylab = "Median of Means")
abline(h=0, col='red')
alpha=2.5
population1=rnorm(1000,0,3)
c(median_of_means_opt(population1, alpha),mean(population1),(mean(population1) - median_of_means_opt(population1, alpha)) ^ 2)
median_of_means <- function(seq, n) {
if (n > length(seq)) {
n <- ceiling(length(seq) / 2)
}
indic <- rep(1:n, each = floor(length(seq) / n))
indic <- sample(indic)
moyennes <- sapply(1:n, function(block) mean(seq[indic == block]))
return(median(moyennes))
}
median_of_means <- function(seq, n) {
if (n > length(seq)) {
n <- ceiling(length(seq) / 2)
}
indic <- rep(1:n, each = floor(length(seq) / n))
indic <- sample(indic)
moyennes <- sapply(1:n, function(block) mean(seq[indic == block]))
return(median(moyennes))
}
M=0
population1=rnorm(1000,M,3)
median_of_means(population1,50)
